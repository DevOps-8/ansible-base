---
- name: config_lvm | installing packages
  apt:
    name: "{{ item }}"
    state: present
  with_items:
     - lvm2
     - scsitools
     - xfsprogs
  when: ansible_os_family == "Debian"

- name: config_lvm | installing lvm2
  yum:
    name: system-storage-manager
    state: present
  when: ansible_os_family == "RedHat"

- name: config_lvm | installing sg3_utils
  yum:
    name: sg3_utils
    state: present
  when: ansible_os_family == "RedHat"

- name: config_lvm | checking for scsi devices
  shell: sg_scan
  register: scsi_devices
  changed_when: False

- name: config_lvm | rescanning for new disks added
  command: /sbin/rescan-scsi-bus
  changed_when: False
  when: scsi_devices.stdout != "" and ansible_os_family == "Debian"

- name: config_lvm | rescanning for new disks
  command: /usr/bin/rescan-scsi-bus.sh
  changed_when: False
  when: ansible_os_family == "RedHat"

- name: config_lvm | creating new LVM volume group
  lvg:
    vg: "{{ create_vgname }}"
    pvs: "{{ lvm_new_disk }}"
    state: present
  when: create_lvm is defined and create_lvm

- name: config_lvm | creating new LVM logical volume
  lvol:
    vg: "{{ create_vgname }}"
    lv: "{{ create_lvname }}"
    size: "{{ create_lvsize }}"

- name: config_lvm | creating new filesystem on new LVM logical volume
  filesystem:
    fstype: "{{ lvm_filesystem }}"
    dev: "/dev/{{ create_vgname }}/{{ create_lvname }}"
  when: create_lvm is defined and create_lvm

- name: config_lvm | mounting new filesystem
  mount:
    name: "{{ lvm_new_mntp }}"
    src: "/dev/{{ create_vgname }}/{{ create_lvname }}"
    fstype: "{{ lvm_filesystem }}"
    state: mounted
  when: create_lvm is defined and create_lvm

- name: config_lvm | extending existing LVM volume group
  lvg:
    vg: "{{ extend_vgname }}"
    pvs: "{{ extend_disks }}"
  when: extend_lvm is defined and extend_lvm

- name: config_lvm | extending existing filesystem
  command: lvextend {{ lvextend_options }} /dev/{{ extend_vgname }}/{{ extend_lvname }}
  when: extend_lvm is defined and extend_lvm

- name: config_lvm | resizing filesystem
  command: resize2fs /dev/{{ resize_vgname }}/{{ resize_lvname }}
  when: resize_lvm is defined and resize_lvm
